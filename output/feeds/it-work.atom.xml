<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>DavidJB.com</title><link href="http://davidjb.com/" rel="alternate"></link><link href="http://davidjb.com/feeds/it-work.atom.xml" rel="self"></link><id>http://davidjb.com/</id><updated>2010-10-26T17:38:00+10:00</updated><entry><title>Bad relationships: RelationChoice, RelationCatalog and removed Dexterity content inÂ Plone</title><link href="http://davidjb.com/blog/2010/10/bad-relationships-relationchoice-relationcatalog-and-removed-dexterity-content-in-plone/" rel="alternate"></link><updated>2010-10-26T17:38:00+10:00</updated><author><name>davidjb</name></author><id>tag:davidjb.com,2010-10-26:blog/2010/10/bad-relationships-relationchoice-relationcatalog-and-removed-dexterity-content-in-plone/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Disclaimer:&lt;/strong&gt; this post isn&amp;#8217;t giving relationship advice (or..it is in
some twisted way).&amp;nbsp; Unsurprisingly, removing content in Plone via the
&lt;span class="caps"&gt;ZMI&lt;/span&gt; when Plone says something can&amp;#8217;t be deleted is likely to cause&amp;nbsp;problems.&lt;/p&gt;
&lt;p&gt;In my case, the fact I removed a Dexterity-based container (&amp;#8220;Project&amp;#8221;)
caused users to no longer add or edit content of my Project type.&amp;nbsp; The
reason for this boiled down to my use of RelationChoice fields, in order
link Projects to Person objects and vice versa.&amp;nbsp; The backend storage for
the RelationChoice field is an instance of
&lt;tt class="docutils literal"&gt;z3c.relationfield.index.RelationCatalog&lt;/tt&gt;, and this keeps records of where
the relations are going to and going&amp;nbsp;from.&lt;/p&gt;
&lt;p&gt;Now, I created a test Project and some content underneath it.&amp;nbsp; Due to
some strange &lt;span class="caps"&gt;KSS&lt;/span&gt; errors I was getting on said content, I decided to try
deleting the parent Project.&amp;nbsp; Plone complained, telling me that the
content couldn&amp;#8217;t be deleted, and giving the same &lt;span class="caps"&gt;KSS&lt;/span&gt; traceback errors.
Needing to get rid of the Project, I decided to traipse into the &lt;span class="caps"&gt;ZMI&lt;/span&gt; and
manually delete the Project that way.&amp;nbsp; I thought I was successful.&amp;nbsp; I
was, but I caused more problems because the Project I made was still
pointing at a Person&amp;nbsp;object.&lt;/p&gt;
&lt;p&gt;Several days later, users began complaining of not being able to add new
Projects or edit existing Project content either.&amp;nbsp; The traceback looked
like&amp;nbsp;this:&lt;/p&gt;
&lt;pre class="code pytb literal-block"&gt;
&lt;span class="x"&gt;2010-10-26 13:30:02 &lt;span class="caps"&gt;ERROR&lt;/span&gt; Zope.SiteErrorLog 1288063802.910.831336088181 http://localhost:8080/plone/programs/sample-project/&amp;#64;&amp;#64;edit
Traceback (innermost last):
  Module ZPublisher.Publish, line 119, in publish
  Module ZPublisher.mapply, line 88, in mapply
  Module ZPublisher.Publish, line 42, in call_object
  Module plone.z3cform.layout, line 64, in __call__
  Module plone.z3cform.layout, line 54, in update
  Module plone.dexterity.browser.edit, line 32, in update
  Module plone.z3cform.fieldsets.extensible, line 59, in update
  Module plone.z3cform.patch, line 30, in GroupForm_update
  Module z3c.form.group, line 138, in update
  Module z3c.form.action, line 99, in execute
  Module z3c.form.button, line 311, in __call__
  Module z3c.form.button, line 170, in __call__
  Module plone.dexterity.browser.edit, line 21, in handleApply
  Module z3c.form.group, line 117, in applyChanges
  Module zope.event, line 23, in notify
  Module zope.component.event, line 26, in dispatch
  Module zope.component._api, line 130, in subscribers
  Module zope.component.registry, line 290, in subscribers
  Module zope.interface.adapter, line 535, in subscribers
  Module zope.component.event, line 33, in objectEventNotify
  Module zope.component._api, line 130, in subscribers
  Module zope.component.registry, line 290, in subscribers
  Module zope.interface.adapter, line 535, in subscribers
  Module z3c.relationfield.event, line 82, in updateRelations
  Module zc.relation.catalog, line 546, in unindex
  Module zc.relation.catalog, line 556, in unindex_doc
  Module zc.relation.catalog, line 622, in _remove
KeyError: 128268893&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;These errors were strange, because the KeyError was different every
time. After several hours of delving through code, it was clear that the
&lt;span class="caps"&gt;ZC&lt;/span&gt; relation catalog was expecting a given key but not finding it (as the
traceback suggests). After poking around in the RelationCatalog&amp;#8217;s
storage, there were a variety of references sticking around that
involved the old Project that I&amp;#8217;d deleted. I hacked in&amp;nbsp;a:&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;from&lt;/span&gt;\&lt;span class="n"&gt;_object&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;sorted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;catalog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;findRelations&lt;/span&gt;&lt;span class="p"&gt;({}))]&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;at line 84 of &lt;tt class="docutils literal"&gt;z3c/relationfield/event.py&lt;/tt&gt;, and it showed references
to objects that no longer&amp;nbsp;existed.&lt;/p&gt;
&lt;p&gt;Trying to use the &lt;tt class="docutils literal"&gt;removeRelations&lt;/tt&gt; method of
&lt;tt class="docutils literal"&gt;z3c/relationfield/event.py&lt;/tt&gt; isn&amp;#8217;t useful, because that swallows up
the same KeyError, so in order to remove the borked relations, it would
have to be done manually. That said, the underlying storage for the
RelationCatalog goes over my&amp;nbsp;head.&lt;/p&gt;
&lt;p&gt;So, due to time constraints, I resolved my issues by using the catalog&amp;#8217;s
&amp;#8220;clear&amp;#8221; method to remove all records. Easily done by&amp;nbsp;inserting:&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="n"&gt;catalog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clear&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;at line 84 of &lt;tt class="docutils literal"&gt;z3c/relationfield/event.py&lt;/tt&gt; (and removing
after I edited a Project and invoked said code). Clearing the catalog
didn&amp;#8217;t break any of relations for my content, and everything&amp;#8217;s now
re-indexed after each Project was edited and saved&amp;nbsp;again.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Word to the wise:&lt;/strong&gt; if you&amp;#8217;re working with this sort of tech, figure
out why you can&amp;#8217;t delete something and solve that, rather than hacking
away. It will come back to bite you. Let me know if you&amp;#8217;ve fixed a
similar issue without needing to clear the&amp;nbsp;catalog.&lt;/p&gt;
</summary><category term="borked"></category><category term="dexterity"></category><category term="plone"></category><category term="problem"></category><category term="zope"></category></entry></feed>